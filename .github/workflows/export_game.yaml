on:
  workflow_call:
    inputs:
      GODOT_VERSION:
        description: 'The godot version string'
        required: true
        type: string
      GODOT_REPO:
        description: 'The repository to download godot from'
        required: true
        type: string
      GAME_EXPORT_NAME:
        description: 'The name of the export'
        required: true
        type: string
      GAME_ARTIFACT_NAME:
        description: 'The name of the artifact to upload'
        required: true
        type: string
      EXTENSIONS_ARCHITECTURE:
        description: 'The architecture to build the extensions for'
        required: true
        type: string
      BUILD_OS:
        description: 'The OS to build the extension on'
        required: true
        type: string
      SEQUENTIAL_COMPILES:
        description: 'Whether to compile extensions sequentially'
        required: true
        type: boolean

jobs:
  export_game:
    name: "Export Game ${{ inputs.GAME_EXPORT_NAME }}"
    runs-on: ${{ inputs.BUILD_OS }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - uses: ./.github/actions/setup_godot
        id: setup_godot
        with:
          GODOT_VERSION: ${{ inputs.GODOT_VERSION }}
          GODOT_REPO: ${{ inputs.GODOT_REPO }}

      - name: Generate default_asset manifest files
        run: python default_assets/manifests.py

      - name: Retrieve extension artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: extension_*
          path: _bin

      - name: Combine extension artifacts
        shell: bash
        run: cp _bin/*/* bin
      
      - name: Create the build directory
        run: mkdir build

      - name: Import all assets
        shell: bash
        run: |
            python utility_scripts/import_project.py \
                --godot_path="${{ steps.setup_godot.outputs.GODOT_CONSOLE_EXE }}"

      - name: Export Client
        shell: bash
        run: ${{ steps.setup_godot.outputs.GODOT_CONSOLE_EXE }} --headless --export-release 'Client ${{ inputs.GAME_EXPORT_NAME }}' project.godot

      - name: Export Server
        shell: bash
        run: ${{ steps.setup_godot.outputs.GODOT_CONSOLE_EXE }} --headless --export-release 'Server ${{ inputs.GAME_EXPORT_NAME }}' project.godot
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: game_export_${{ inputs.GAME_ARTIFACT_NAME }}
          path: build
