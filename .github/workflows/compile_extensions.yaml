on:
  workflow_call:
    inputs:
      GODOT_VERSION:
        description: 'The godot version string'
        required: true
        type: string
      EXTENSIONS_ARCHITECTURE:
        description: 'The architecture to build the extensions for'
        required: true
        type: string
      BUILD_OS:
        description: 'The OS to build the extension on'
        required: true
        type: string

jobs:
  compile_extensions:
    strategy:
      fail-fast: false
      matrix:
        build_mode: [ debug, release ]
    
    name: "Compile Extensions ${{ inputs.BUILD_OS }} ${{ matrix.build_mode }}"
    runs-on: ${{ inputs.BUILD_OS }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
    
      - uses: actions/cache@v4
        id: cache
        with:
          path: extensions/build
          key: extension_cache_${{ runner.os }}_${{ matrix.build_mode }}_${{ inputs.EXTENSIONS_ARCHITECTURE }}_${{ inputs.GODOT_VERSION }}-${{ github.run_id }}
          restore-keys: |
            extension_cache_${{ runner.os }}_${{ matrix.build_mode }}_${{ inputs.EXTENSIONS_ARCHITECTURE }}_${{ inputs.GODOT_VERSION }}
            extension_cache_${{ runner.os }}_${{ matrix.build_mode }}_${{ inputs.EXTENSIONS_ARCHITECTURE }}

      - name: install build deps (linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y mold ccache ninja-build

      - name: install build deps (macos)
        if: runner.os == 'macOS'
        run: |
          brew install ccache
          brew install mold
          brew install ninja

      - name: install build deps (windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install ninja
          choco install -y ccache

      - name: Compile the extension
        run: python ./extensions/scripts/compile.py --target_arch=${{ inputs.EXTENSIONS_ARCHITECTURE }} --build_dir=extensions/build --mode=${{ matrix.build_mode }}

      - name: Upload extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension_${{ runner.os }}_${{ matrix.build_mode }}_${{ inputs.EXTENSIONS_ARCHITECTURE }}
          path: |
            bin/*.dll
            bin/*.dll.a
            bin/*.dylib
            bin/**.framework
            bin/*.so
